name: CI

on:
  pull_request:
  workflow_dispatch:
#  schedule:
#    - cron: '42 5 * * *'

jobs:
  test-in-container:
    strategy:
      fail-fast: false
      matrix:
        ruby: [ '3.3.3' ]
        gemfile: [ 'Gemfile', 'Gemfile.scenic' ]
        database:
          - 'pg17-ts2.17-all'
          - 'pg16-ts2.17-all'
          - 'pg15-ts2.17-all'
    env:
      BUNDLE_GEMFILE: ${{ matrix.gemfile }}

    services:
      database:
        image: timescale/timescaledb-ha:${{matrix.database}}
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    runs-on: ubuntu-latest
    name: OS Ruby ${{matrix.ruby}} (${{matrix.gemfile}}) database ${{matrix.database}}
    container: ruby:${{matrix.ruby}}

    steps:
    - uses: actions/checkout@v3

    - name: Show Ruby Version
      run: |
        ruby -v

    - name: Install psql
      run: |
        apt-get update
        apt-get install -y postgresql-client

    - name: Show PostgreSQL version and time
      env:
        PGPASSWORD: secret
      run: |
        echo "SELECT version()" | psql -h database -U username testdb
        echo "SELECT CURRENT_TIME" | psql -h database -U username testdb

    - run: bundle install

    - name: run tsdb
      run: ./bin/tsdb postgres://username:secret@database:5432/testdb --stats

    - name: Test setup
      run: |
        echo PG_URI_TEST="postgres://username:secret@database:5432/testdb" > .env
        cat .env
        bundle exec rake test:setup

    - name: Test
      run: bundle exec rake spec

